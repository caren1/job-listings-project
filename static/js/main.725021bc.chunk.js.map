{"version":3,"sources":["components/JobOffer.js","App.js","index.js"],"names":["JobOffer","job","handleTagClick","tags","role","level","languages","push","tools","className","featured","src","logo","alt","company","isNew","position","postedAt","contract","location","map","item","onClick","App","useState","jobs","setJobs","filters","setFilters","useEffect","data","handeTagClick","tag","includes","filteredJobs","filter","length","every","require","filterToBeRemoved","f","key","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAwCeA,EAtCE,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,eAEfC,EAAO,CAACF,EAAIG,KAAMH,EAAII,OAU5B,OARIJ,EAAIK,WACJH,EAAKI,KAAL,MAAAJ,EAAI,YAASF,EAAIK,YAGjBL,EAAIO,OACJL,EAAKI,KAAL,MAAAJ,EAAI,YAASF,EAAIO,QAIjB,yBAAKC,UAAS,4EAAuER,EAAIS,UAAY,0CAAvF,yBACV,yBAAKD,UAAU,kBACX,yBAAKA,UAAU,gDAAgDE,IAAKV,EAAIW,KAAMC,IAAI,kBAEtF,yBAAKJ,UAAU,4DACX,wBAAIA,UAAU,2BACTR,EAAIa,QACJb,EAAIc,OAAS,0BAAMN,UAAU,0EAAhB,OACbR,EAAIS,UAAY,0BAAMD,UAAU,uEAAhB,aAErB,wBAAIA,UAAU,kCAAkCR,EAAIe,UACpD,uBAAGP,UAAU,iBAAiBR,EAAIgB,SAAlC,SAA+ChB,EAAIiB,SAAnD,SAAgEjB,EAAIkB,WAExE,yBAAKV,UAAU,2IAEPN,EACCA,EAAKiB,KAAI,SAACC,GAAD,OACV,0BAAMC,QAAS,kBAAMpB,EAAemB,IAAOZ,UAAU,kFAAkFY,MAAmB,MCsC/JE,MAjEf,WAAgB,IAAD,EAEaC,mBAAS,IAFtB,mBAELC,EAFK,KAECC,EAFD,OAGmBF,mBAAS,IAH5B,mBAGLG,EAHK,KAGIC,EAHJ,KAYXC,qBAAU,WACNH,EAAQI,KACT,IAEH,IAUMC,EAAgB,SAACC,GAClBL,EAAQM,SAASD,IACpBJ,EAAW,GAAD,mBAAKD,GAAL,CAAcK,MAWpBE,EAAeT,EAAKU,QAvBH,SAAC,GAAuC,IAArC/B,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,MAAOG,EAAuB,EAAvBA,MAAOF,EAAgB,EAAhBA,UAC5C,GAAuB,IAAnBqB,EAAQS,OAAc,OAAO,EACjC,IAAMjC,EAAO,CAACC,EAAMC,GAKpB,OAJGG,GAAOL,EAAKI,KAAL,MAAAJ,EAAI,YAASK,IACpBF,GAAWH,EAAKI,KAAL,MAAAJ,EAAI,YAASG,IAGpBqB,EAAQU,OAAM,SAACF,GAAD,OAAYhC,EAAK8B,SAASE,SAkBnD,OAEE,yBAAK1B,UAAU,OACb,4BAAQA,UAAU,qCAChB,yBAAK6B,SAAO,EAAC3B,IAAI,iCAAiCE,IAAI,uBAGvDc,EAAQS,OAAS,GAEhB,yBAAK3B,UAAU,mDACZkB,EAAQP,KAAI,SAACe,GAAD,OACT,0BAAM1B,UAAU,qGAChBa,QAAS,kBAtBQiB,EAsBgBJ,OArBzCP,EAAWD,EAAQQ,QAAO,SAAAK,GAAC,OAAIA,IAAMD,MADb,IAACA,IAqBjB,UAC6CJ,MAEnD,4BAAQb,QApBS,WACnBM,EAAW,KAmBsBnB,UAAU,mCAAzC,UAKe,IAAhBgB,EAAKW,OAAiB,gDAA8BF,EAAad,KAAI,SAAAnB,GAAG,OAAK,kBAAC,EAAD,CAAUA,IAAKA,EAAKwC,IAAKxC,EAAIyC,GAAIxC,eAAgB6B,SC5DrIY,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.725021bc.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst JobOffer = ({ job, handleTagClick }) => {\r\n\r\n    const tags = [job.role, job.level]\r\n\r\n    if (job.languages) {\r\n        tags.push(...job.languages)\r\n    }\r\n\r\n    if (job.tools) {\r\n        tags.push(...job.tools)\r\n    }\r\n\r\n    return (\r\n        <div className={`jobOffer flex-col my-16 mx-10 flex bg-white shadow-lg p-6 rounded ${job.featured && 'border-l-4 border-teal-500 border-solid'} sm:flex-row sm:my-8`}>\r\n            <div className=\"jobOffer__logo\">\r\n                <img className=\"-mt-16 mb-4 w-20 h-20 sm:h-24 sm:w-24 sm:my-0\" src={job.logo} alt=\"company-logo\" />\r\n            </div>\r\n            <div className=\"jobOffer__description flex flex-col justify-between ml-4\">\r\n                <h3 className=\"font-bold text-teal-500\">\r\n                    {job.company}\r\n                    {job.isNew && <span className=\"bg-teal-500 text-teal-100 rounded-full m-2 px-2 py-1 text-xs uppercase\">New</span>}\r\n                    {job.featured && <span className=\"bg-gray-800 text-white rounded-full m-2 px-2 py-1 text-xs uppercase\">Featured</span>}\r\n                </h3>\r\n                <h2 className=\"font-bold text-xl my-2 sm:my-0\">{job.position}</h2>\r\n                <p className=\"text-gray-700\">{job.postedAt} · {job.contract} · {job.location}</p>\r\n            </div>\r\n            <div className=\"jobOffer__stack flex flex-wrap items-center mt-4 mx-4 pt-4 border-t border-gray-300 border-solid sm:ml-auto sm:border-0 sm:pt-0 sm:mt-0\">\r\n                {\r\n                    tags ? \r\n                    (tags.map((item) => (\r\n                    <span onClick={() => handleTagClick(item)} className=\"text-teal-500 cursor-pointer bg-teal-100 text-xs mr-4 mb-4 p-2 rounded sm:mb-0\">{item}</span>))) : ('')\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JobOffer\r\n","import React, { useState, useEffect } from 'react';\nimport data from './assets/data.json'\n// import JobOffer from './JobOffer'\nimport JobOffer from './components/JobOffer'\n\nfunction App() {\n\n  const [ jobs, setJobs ] = useState([]);\n  const [ filters, setFilters ] = useState([])\n\n    // for the api call\n    // useEffect(() => {\n    //     fetch('API_URL')\n    //     .then((response) => response.json())\n    //     .then((data) => setJobs(data))\n    // }, []);\n\n    useEffect(() => {\n        setJobs(data);\n    }, [])\n\n    const filterFunction = ({ role, level, tools, languages }) => {\n      if (filters.length === 0) return true\n      const tags = [role, level]\n      if(tools) tags.push(...tools)\n      if(languages) tags.push(...languages)\n      \n      \n      return filters.every((filter) => tags.includes(filter));\n    }\n\n    const handeTagClick = (tag) => {\n      if(filters.includes(tag)) return;\n      setFilters([...filters, tag])\n    }\n    \n    const handleFilterClick = (filterToBeRemoved) => {\n      setFilters(filters.filter(f => f !== filterToBeRemoved))\n    }\n\n    const clearFilters = () => {\n      setFilters([])\n    }\n\n    const filteredJobs = jobs.filter(filterFunction)\n\n  return (\n\n    <div className=\"app\">\n      <header className=\"bg-teal-500 mb-12 .object-contain\">\n        <img require src=\"./images/bg-header-desktop.svg\" alt=\"header-background\" />\n      </header>\n\n      {filters.length > 0 && (\n\n        <div className=\"flex bg-white shadow-md my-16 mx-10 p-6 rounded\">\n          {filters.map((filter) => (     \n              <span className=\"text-teal-500 bg-teal-100 text-xs font-bold uppercase rounded sm:mb-0 p-2 cursor-pointer mr-4 mb-4\" \n              onClick={() => handleFilterClick(filter)}>✕ {filter}</span>\n          ))}\n        <button onClick={clearFilters} className=\"font-bold text-gray-700 ml-auto\">Clear</button>\n        </div>\n\n      )}\n      \n      {jobs.length === 0 ? ( <p>jobs are fetching</p> ) : (filteredJobs.map(job => (<JobOffer job={job} key={job.id} handleTagClick={handeTagClick}/>)))}\n    </div>\n  )\n}\n\nexport default App;\n\n// What's the plan?\n// 1 - Studied the design & json ; structure for JSX\n// 2 - Create Job board Component\n// 3 - Retrieving the data from json\n// 4 - Passing down the data to the above component\n// 5 - Styling + mobile\n// 6 - Filtering -> Filter component","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}